@model IEnumerable<NotesMVC.Models.Note>

<!--promqna-->
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Client> SignInManager

    @* var count =0; *@
    @* function strip(el, max){ *@
    @* var children=Array.prototype.slice.call(el.childNodes)Children.forEach((node)=>{ *@
    @* if(node instanceof Text) { *@
    @*     var newCount = count + node.textContent.length; *@
    @* var diff = newCount - max; *@
    @* if (diff > 0) *@
    @* node.textContent = node.textContent.substring(0. node.textContent.length - diff); *@
    @* count+=node.textContent.length;} *@
    @* else if (node instanceof HTMLElement){ *@
    @* if(count>=max) node.remove();// remove unnecessary tags *@
    @* else strip(node, max); //do recursivery *@
    @* }}} *@

    <!--promqna-->
@using (Html.BeginForm("Index", "Notes", FormMethod.Get))
{
    @* <table> *@
    @*     <tr> *@
    @*     <td> *@
    @*         <input type="text" name="searchTerm" class="form-control" placeholder="Search notes..." value="@ViewData["SearchTerm"]" /> *@
    @*     </td> *@
    @*     <td> *@
    @*         <button type="submit" class="btn btn-primary mt-2">Search</button> *@
    @*     </td> *@
    @*     </tr> *@
    @* </table> *@
    <form>
            <input type="text" name="searchTerm" style="width: 70%; height:40px;" placeholder="Search notes..." value="@ViewData["SearchTerm"]" />
            <button type="submit" class="btn btn-primary ">Search</button>
    </form>

}
    <!--kraaj na promqna-->
<style>
    body {
        background-color: #fef9e1;
        color: #a31d1d;
    }
</style>
@{
    ViewData["Title"] = "Index";
}

<h1>My notes</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@* ako e client pokazva samo negovite belezhki*@
@if (User.IsInRole("client"))
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastUpdateOn)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastUpdateOn)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@* ako e admin pokazva negovite notes purvo i posle tezi na vsichki ostanali kato pokazva i email-a na choveka suzdal belevkata*@

@if (User.IsInRole("admin"))
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastUpdateOn)
                </th>
                <!--promqna-->
                <th>
                    @Html.DisplayNameFor(model => model.ClientEmail)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if(item.ClientEmail == "admin@admin.com")
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastUpdateOn)
                        </td>
                        <!--promqna-->
                        <td>
                            @Html.DisplayFor(modelItem => item.ClientEmail)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <p></p>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastUpdateOn)
                </th>
                <!--promqna-->
                <th>
                    @Html.DisplayNameFor(model => model.ClientEmail)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if (item.ClientEmail != "admin@admin.com")
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastUpdateOn)
                        </td>
                        <!--promqna-->
                        <td>
                            @Html.DisplayFor(modelItem => item.ClientEmail)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
